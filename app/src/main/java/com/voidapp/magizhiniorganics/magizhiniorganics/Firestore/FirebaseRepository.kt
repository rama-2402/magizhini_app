package com.voidapp.magizhiniorganics.magizhiniorganics.Firestoreimport com.voidapp.magizhiniorganics.magizhiniorganics.data.models.CustomerProfileimport com.voidapp.magizhiniorganics.magizhiniorganics.data.models.Messagesimport com.voidapp.magizhiniorganics.magizhiniorganics.data.models.SupportProfileimport com.voidapp.magizhiniorganics.magizhiniorganics.ui.ProfileActivityimport com.voidapp.magizhiniorganics.magizhiniorganics.ui.customerSupport.ChatViewModelimport com.voidapp.magizhiniorganics.magizhiniorganics.ui.customerSupport.chatConversation.ConversationViewModelclass FirebaseRepository (    private val firebase: Firebase) {    suspend fun uploadUserProfile(profile: CustomerProfile) = firebase.uploadUserProfile(profile)    fun updateTypingStatus(id: String, status: Boolean) = firebase.updateTypingStatus(id, status)    fun sendMessage(message: Messages) = firebase.sendMessage(message)    fun getConversation(conversationViewModel: ConversationViewModel, fromId: String, toId: String) = firebase.getConversation(conversationViewModel, fromId, toId)    fun listenForRecentMessages(chatViewModel: ChatViewModel, id: String) = firebase.listenForRecentMessages(chatViewModel, id)    fun updateProfileStatus(id: String ,status: Boolean, timestamp: Long) = firebase.updateProfileStatus(id ,status, timestamp)    fun getSupportProfileUpdates(conversationViewModel: ConversationViewModel ,id: String) = firebase.getSupportProfileUpdates(conversationViewModel ,id)    fun getAllSupportProfiles(chatViewModel: ChatViewModel) = firebase.getAllSupportProfiles(chatViewModel)}