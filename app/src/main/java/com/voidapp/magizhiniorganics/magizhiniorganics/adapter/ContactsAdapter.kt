package com.voidapp.magizhiniorganics.magizhiniorganics.adapterimport android.content.Contextimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.RecyclerViewimport com.google.firebase.database.DataSnapshotimport com.google.firebase.database.DatabaseErrorimport com.google.firebase.database.FirebaseDatabaseimport com.google.firebase.database.ValueEventListenerimport com.voidapp.magizhiniorganics.magizhiniorganics.data.models.SupportProfileimport com.voidapp.magizhiniorganics.magizhiniorganics.databinding.RvChatItemBindingimport com.voidapp.magizhiniorganics.magizhiniorganics.utils.loadSimpleclass ContactsAdapter(    private val context: Context,    var supportProfiles: ArrayList<SupportProfile>,    private val onItemClickListener: ContactItemClickListener): RecyclerView.Adapter<ContactsAdapter.ContactsViewHolder>() {    inner class ContactsViewHolder(val binding: RvChatItemBinding): RecyclerView.ViewHolder(binding.root)    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ContactsViewHolder {        val view = RvChatItemBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return ContactsViewHolder(view)    }    override fun onBindViewHolder(holder: ContactsViewHolder, position: Int) {            val supportProfile = supportProfiles[position]            with(holder.binding) {                tvProfileName.text = supportProfile.profileName                ivProfileImage.loadSimple(supportProfile.thumbnailUrl)                tvRecentMessage.visibility = View.GONE                tvStatus.visibility = View.GONE                llHeader.setOnClickListener {                    getSelectedProfile(supportProfile.id)                }            }    }    private fun getSelectedProfile(id: String) {        val databaseReference = FirebaseDatabase.getInstance().getReference("customerSupport/$id")        databaseReference.addListenerForSingleValueEvent(object : ValueEventListener {            override fun onDataChange(snapshot: DataSnapshot) {                onItemClickListener.moveToConversations(snapshot.getValue(SupportProfile::class.java)!!)            }            override fun onCancelled(error: DatabaseError) {}        })    }    private fun updateSupportData(holder: ChatAdapter.ChatViewHolder, id: String) {        val databaseReference = FirebaseDatabase.getInstance().getReference("customerSupport/$id")        databaseReference.addListenerForSingleValueEvent(object : ValueEventListener {            override fun onDataChange(snapshot: DataSnapshot) {                val recentTextedProfile = snapshot.getValue(SupportProfile::class.java)!!                holder.binding.tvProfileName.text = recentTextedProfile.profileName                holder.binding.ivProfileImage.loadSimple(recentTextedProfile.thumbnailUrl)            }            override fun onCancelled(error: DatabaseError) {}        })    }    override fun getItemCount(): Int {        return supportProfiles.size    }    interface ContactItemClickListener {        fun moveToConversations(supportProfile: SupportProfile)    }}